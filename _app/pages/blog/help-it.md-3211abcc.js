import{S as a,i as n,s,e,k as o,c as t,a as p,n as l,d as c,b as r,f as i,F as u,G as g,t as k,j as d,g as m,m as h,o as f,x as v,u as E,v as b}from"../../chunks/vendor-526315b7.js";function P(a){let n,s,k,d,m,h,f;return{c(){n=e("picture"),s=e("source"),k=o(),d=e("source"),m=o(),h=e("img"),this.h()},l(a){n=t(a,"PICTURE",{});var e=p(n);s=t(e,"SOURCE",{srcset:!0,type:!0}),k=l(e),d=t(e,"SOURCE",{srcset:!0,type:!0}),m=l(e),h=t(e,"IMG",{src:!0,alt:!0}),e.forEach(c),this.h()},h(){r(s,"srcset",a[0]),r(s,"type","image/webp"),r(d,"srcset",a[1]),r(d,"type","image/jpeg"),h.src!==(f=a[0])&&r(h,"src",f),r(h,"alt",a[2])},m(a,e){i(a,n,e),u(n,s),u(n,k),u(n,d),u(n,m),u(n,h)},p(a,[n]){1&n&&r(s,"srcset",a[0]),2&n&&r(d,"srcset",a[1]),1&n&&h.src!==(f=a[0])&&r(h,"src",f),4&n&&r(h,"alt",a[2])},i:g,o:g,d(a){a&&c(n)}}}function w(a,n,s){let{imageJPG:e}=n,{imageWEBP:o}=n,{alt:t}=n;return a.$$set=a=>{"imageJPG"in a&&s(0,e=a.imageJPG),"imageWEBP"in a&&s(1,o=a.imageWEBP),"alt"in a&&s(2,t=a.alt)},[e,o,t]}class y extends a{constructor(a){super(),n(this,a,w,P,s,{imageJPG:0,imageWEBP:1,alt:2})}}function C(a){let n,s,P,w,C,H,M,j,x,z,D,L,O,I,S,A,T,R,G,B,K,U,J,$,N,W,_,F,Q,V,X,Y,Z,aa,na,sa,ea,oa,ta,pa,la,ca,ra,ia,ua,ga,ka,da,ma,ha,fa,va,Ea,ba,Pa,wa,ya,Ca,Ha,qa,Ma,ja,xa,za,Da,La,Oa,Ia,Sa,Aa,Ta,Ra,Ga,Ba,Ka,Ua,Ja,$a,Na,Wa,_a,Fa,Qa,Va,Xa,Ya,Za,an,nn,sn,en,on,tn,pn,ln,cn,rn,un,gn,kn,dn,mn,hn,fn,vn,En,bn,Pn,wn,yn,Cn,Hn,qn,Mn,jn,xn,zn,Dn,Ln,On,In,Sn,An,Tn,Rn,Gn,Bn,Kn,Un,Jn,$n,Nn,Wn,_n,Fn,Qn,Vn,Xn,Yn,Zn,as,ns,ss,es,os,ts,ps,ls,cs,rs,is,us,gs,ks,ds,ms,hs,fs,vs,Es,bs,Ps,ws,ys,Cs,Hs,qs,Ms,js,xs,zs,Ds,Ls,Os,Is,Ss,As,Ts,Rs,Gs,Bs,Ks,Us,Js,$s,Ns,Ws,_s,Fs,Qs,Vs,Xs,Ys,Zs,ae,ne,se,ee,oe,te,pe,le,ce,re,ie,ue,ge,ke,de,me,he,fe,ve,Ee,be,Pe,we,ye,Ce,He,qe,Me,je,xe,ze,De,Le,Oe,Ie,Se,Ae,Te,Re,Ge,Be,Ke,Ue,Je,$e,Ne,We,_e,Fe,Qe,Ve,Xe,Ye,Ze,ao,no,so,eo,oo,to,po,lo,co,ro,io,uo,go,ko,mo,ho,fo,vo,Eo,bo,Po,wo,yo,Co,Ho,qo,Mo,jo,xo,zo,Do,Lo,Oo,Io,So,Ao,To,Ro,Go,Bo,Ko,Uo,Jo,$o,No,Wo,_o,Fo,Qo,Vo,Xo,Yo,Zo,at,nt,st,et,ot,tt,pt,lt,ct,rt,it,ut,gt,kt,dt,mt,ht,ft,vt,Et,bt,Pt,wt,yt,Ct,Ht,qt,Mt,jt,xt,zt,Dt,Lt,Ot,It,St,At,Tt,Rt,Gt,Bt,Kt,Ut,Jt,$t,Nt,Wt,_t,Ft;return Ua=new y({props:{imageJPG:"/_app/assets/settings.dbf20e56.jpg",imageWEB:"/_app/assets/settings.58715aa0.webp",alt:"Settings"}}),{c(){n=e("h1"),s=k(q),P=o(),w=e("p"),C=k("Era da qualche settimane che volevo scrivere un nuovo articolo su come usare Svelte con GitHub Pages. Devo ammettere che lo sprone sono state alcune mail con richieste di chiarimenti sul mio "),H=e("a"),M=k("post precedete"),j=k(". Aggiungo quindi un altro tassello alla mia esplorazione di Svelte parlando di come penso sia possibile usare SvelteKit con GitHub Pages."),x=o(),z=e("p"),D=k("Tengo sempre la forma "),L=e("em"),O=k("diario di viaggio"),I=k(": riporto qui i passaggi che sto compiendo, sperando sia sufficiente per riprodurre in futuro lo stesso risultato."),S=o(),A=e("p"),T=k("Per prima cosa creo un nuovo progetto basato su "),R=e("a"),G=k("SvelteKit"),B=k(" digitando:"),K=o(),U=e("pre"),J=o(),$=e("p"),N=k("Installo quindi le varie dipendenze"),W=o(),_=e("pre"),F=o(),Q=e("p"),V=k("Per semplificare la pubblicazione su GitHub Pages uso ancora una volta "),X=e("a"),Y=k("gh-pages"),Z=k(":"),aa=o(),na=e("pre"),sa=o(),ea=e("p"),oa=k("Aggiungo lo script su "),ta=e("code"),pa=k("package.json"),la=k(":"),ca=o(),ra=e("pre"),ia=o(),ua=e("p"),ga=k("E quindi creo il file gh-pages.js:"),ka=o(),da=e("pre"),ma=o(),ha=e("p"),fa=k("Per pubblicare su GitHub mi serve l’"),va=e("a"),Ea=k("adapter-static"),ba=k(":"),Pa=o(),wa=e("pre"),ya=o(),Ca=e("p"),Ha=k("Aggiorno quindi il file "),qa=e("code"),Ma=k("svelte.config.js"),ja=o(),xa=e("pre"),za=o(),Da=e("p"),La=k("Se eseguo il comando"),Oa=o(),Ia=e("pre"),Sa=o(),Aa=e("p"),Ta=k("Otterrò una cartella "),Ra=e("code"),Ga=k("build"),Ba=k(" nella root del progetto. Bene, questa sarà la cartella da caricare su GitHub Pages. Ma prima devo configurare il repository in maniera corretta."),Ka=o(),d(Ua.$$.fragment),Ja=o(),$a=e("p"),Na=k("Imposto come origine del sito la branch "),Wa=e("code"),_a=k("gh-pages"),Fa=k(" e, in caso, imposto un dominio personalizzato."),Qa=o(),Va=e("p"),Xa=k("Mi servono poi altri 2 file, entrambi da inserire nella cartella "),Ya=e("code"),Za=k("static"),an=k(":"),nn=o(),sn=e("ul"),en=e("li"),on=e("code"),tn=k(".nojekyll"),pn=k(", per evitare che sia Jekyll a gestire le pagine create (see "),ln=e("a"),cn=k("Bypassing Jekyll on GitHub Pages"),rn=k(")"),un=o(),gn=e("li"),kn=e("code"),dn=k("CNAME"),mn=k(", per permette a GitHub Pages di usare il dominio personalizzato che ho impostato."),hn=o(),fn=e("p"),vn=k("Il primo file, "),En=e("code"),bn=k(".nojekyll"),Pn=k(" è un file vuoto. Basta crearlo e non scriverci dentro nulla."),wn=o(),yn=e("p"),Cn=e("code"),Hn=k("CNAME"),qn=k(", invece, contiene una sola riga: il nome del dominio, in questo formato:"),Mn=o(),jn=e("pre"),xn=o(),zn=e("p"),Dn=k("Fatto questo posso ricompilare il sito con "),Ln=e("code"),On=k("npm run build"),In=k(" e poi usare"),Sn=o(),An=e("pre"),Tn=o(),Rn=e("p"),Gn=k("per caricarlo online."),Bn=o(),Kn=e("p"),Un=k("In fase di sviluppo è comodo anche il comando"),Jn=o(),$n=e("pre"),Nn=o(),Wn=e("p"),_n=k("Per vedere in tempo reale le modifiche fatte al codice."),Fn=o(),Qn=e("p"),Vn=k("Provo ad aggiungere una nuova pagina, "),Xn=e("code"),Yn=k("about.svelte"),Zn=k(". Basta creare un nuovo componente nella cartella "),as=e("code"),ns=k("src\\routes"),ss=k("."),es=o(),os=e("p"),ts=k("Questo può andare bene per un sito statico. E se invece volessi creare qualcosa di simile ad un blog?"),ps=o(),ls=e("p"),cs=k("Qui la questione è un po’ più complicata. Ho trovato alcuni post e video in rete:"),rs=o(),is=e("ul"),us=e("li"),gs=e("a"),ks=k("SvelteKit Blog"),ds=k(" - grazie John per il link!"),ms=o(),hs=e("li"),fs=e("a"),vs=k("Sveltekit Markdown Blog"),Es=o(),bs=e("li"),Ps=e("a"),ws=k("How to Create a Blog with SvelteKit and Strapi"),ys=o(),Cs=e("li"),Hs=e("a"),qs=k("How to create a blog with SvelteKit and dev.to API"),Ms=o(),js=e("p"),xs=k("E altri ancora. Non sono davvero soddisfatto di nessuna delle soluzioni proposte. Ma non ho ancora una mia proposta. Mi limito per il momento a unire alcuni passaggi dei diversi. Devo però fare un ringraziamento particolare a "),zs=e("a"),Ds=k("WebJeda"),Ls=k(" per i suoi video e i suoi post."),Os=o(),Is=e("p"),Ss=k("Detto questo, mi serve qualche altro strumento. Per cominciare mi serve "),As=e("a"),Ts=k("trash-cli"),Rs=k(" per ripulire la cartella "),Gs=e("code"),Bs=k("build"),Ks=k(" prima di ogni comando "),Us=e("code"),Js=k("npm run build"),$s=o(),Ns=e("pre"),Ws=o(),_s=e("p"),Fs=k("Aggiungo un nuovo script a "),Qs=e("code"),Vs=k("package.json"),Xs=k(" e aggiorno "),Ys=e("code"),Zs=k("build"),ae=k(":"),ne=o(),se=e("pre"),ee=o(),oe=e("p"),te=k("Passo quindi a importare "),pe=e("a"),le=k("mdsvex"),ce=o(),re=e("pre"),ie=o(),ue=e("p"),ge=k("e in successione uso "),ke=e("a"),de=k("svelte-add/mdsvex"),me=k(":"),he=o(),fe=e("pre"),ve=o(),Ee=e("p"),be=e("code"),Pe=k("mdsvex"),we=k(" mi permette di usare le pagine "),ye=e("code"),Ce=k("markdown"),He=k(" come se fossero dei componenti svelte. Anche come pagine di un router di SvelteKit. C’è un file di configurazione, "),qe=e("code"),Me=k("mdsvex.config.js"),je=k(":"),xe=o(),ze=e("pre"),De=o(),Le=e("p"),Oe=k("Il file "),Ie=e("code"),Se=k("svelte.config.js"),Ae=k(" viene modificato in modo da gestire il markdown:"),Te=o(),Re=e("pre"),Ge=o(),Be=e("p"),Ke=k("Come prova posso creare alcuni post di un blog fittizio. Creo la cartella "),Ue=e("code"),Je=k("src/routes/blog"),$e=k(" e dentro inserisco alcuni file "),Ne=e("code"),We=k(".md"),_e=k("."),Fe=o(),Qe=e("pre"),Ve=o(),Xe=e("p"),Ye=k("Dopo aver rieseguito "),Ze=e("code"),ao=k("npm run dev"),no=k(" posso vedere il risultato alla pagina "),so=e("code"),eo=k("http://localhost:3000/blog/hello-world"),oo=o(),to=e("p"),po=k("La cosa bella è che è possibile usare Svelte dentro il file. Posso per esempio impostare il titolo della pagina con:"),lo=o(),co=e("pre"),ro=o(),io=e("p"),uo=k("e usare dei componenti definiti altrove:"),go=o(),ko=e("pre"),mo=o(),ho=e("p"),fo=k("È invece un po’ più complessa la gestione delle immagini. Non so ancora quale sia il metodo migliore. Uno prevede di inserire tutte le immagini nella cartella "),vo=e("code"),Eo=k("static"),bo=k(" e poi richiamarle da lì:"),Po=o(),wo=e("pre"),yo=o(),Co=e("p"),Ho=k("In alternativa si possono inserire in una cartella dentro "),qo=e("code"),Mo=k("lib"),jo=k(" e poi importarle come componenti:"),xo=o(),zo=e("pre"),Do=o(),Lo=e("p"),Oo=k("Un altro aspetto da tenere presente quando si crea un blog è la necessità di gestire l’home page in maniera dinamica. Posso ottenere qualcosa di carino creando un componente "),Io=e("code"),So=k("src/routes/blog/index.svelte"),Ao=k(" e usando la funzione "),To=e("a"),Ro=k("load()"),Go=k("."),Bo=o(),Ko=e("p"),Uo=k("Comincio con l’importare nel componente un array con un riferimento a tutti file con estensione "),Jo=e("code"),$o=k("md"),No=k(" nella cartella:"),Wo=o(),_o=e("pre"),Fo=o(),Qo=e("p"),Vo=k("Estraggo da quell’array le informazioni che mi servono: "),Xo=e("code"),Yo=k("path"),Zo=k(", ovvero la posizione del file, e "),at=e("code"),nt=k("metadata"),st=k(", che non è altro che il contenuto del Frontmatter del file stesso"),et=o(),ot=e("pre"),tt=o(),pt=e("p"),lt=k("Infine passo al componente quello che mi serve per creare l’indice:"),ct=o(),rt=e("pre"),it=o(),ut=e("p"),gt=k("Il resto del componente è abbastanza semplice:"),kt=o(),dt=e("pre"),mt=o(),ht=e("p"),ft=k("Un’altra funzione interessante sono i "),vt=e("a"),Et=k("layouts"),bt=k(", ovvero delle specie di template. Per esempio, posso creare un componente "),Pt=e("code"),wt=k("src/routes/blog/__layout.svelte"),yt=k(":"),Ct=o(),Ht=e("pre"),qt=o(),Mt=e("p"),jt=k("Per inserire un menù di navigazione in ogni pagina del blog."),xt=o(),zt=e("p"),Dt=k("Per oggi è tutto. Il codice è disponibile su GitHub:"),Lt=o(),Ot=e("ul"),It=e("li"),St=e("a"),At=k("MEMENTO - SvelteKit & GitHub Pages"),Tt=o(),Rt=e("p"),Gt=k("Il blog invece è visibile all’indirizzo"),Bt=o(),Kt=e("p"),Ut=k("Ricordo inoltre l’indirizzo del mio Patreon:"),Jt=o(),$t=e("ul"),Nt=e("li"),Wt=e("a"),_t=k("Patreon"),this.h()},l(a){n=t(a,"H1",{});var e=p(n);s=m(e,q),e.forEach(c),P=l(a),w=t(a,"P",{});var o=p(w);C=m(o,"Era da qualche settimane che volevo scrivere un nuovo articolo su come usare Svelte con GitHub Pages. Devo ammettere che lo sprone sono state alcune mail con richieste di chiarimenti sul mio "),H=t(o,"A",{href:!0,rel:!0});var r=p(H);M=m(r,"post precedete"),r.forEach(c),j=m(o,". Aggiungo quindi un altro tassello alla mia esplorazione di Svelte parlando di come penso sia possibile usare SvelteKit con GitHub Pages."),o.forEach(c),x=l(a),z=t(a,"P",{});var i=p(z);D=m(i,"Tengo sempre la forma "),L=t(i,"EM",{});var u=p(L);O=m(u,"diario di viaggio"),u.forEach(c),I=m(i,": riporto qui i passaggi che sto compiendo, sperando sia sufficiente per riprodurre in futuro lo stesso risultato."),i.forEach(c),S=l(a),A=t(a,"P",{});var g=p(A);T=m(g,"Per prima cosa creo un nuovo progetto basato su "),R=t(g,"A",{href:!0,rel:!0});var k=p(R);G=m(k,"SvelteKit"),k.forEach(c),B=m(g," digitando:"),g.forEach(c),K=l(a),U=t(a,"PRE",{class:!0}),p(U).forEach(c),J=l(a),$=t(a,"P",{});var d=p($);N=m(d,"Installo quindi le varie dipendenze"),d.forEach(c),W=l(a),_=t(a,"PRE",{class:!0}),p(_).forEach(c),F=l(a),Q=t(a,"P",{});var f=p(Q);V=m(f,"Per semplificare la pubblicazione su GitHub Pages uso ancora una volta "),X=t(f,"A",{href:!0,rel:!0});var v=p(X);Y=m(v,"gh-pages"),v.forEach(c),Z=m(f,":"),f.forEach(c),aa=l(a),na=t(a,"PRE",{class:!0}),p(na).forEach(c),sa=l(a),ea=t(a,"P",{});var E=p(ea);oa=m(E,"Aggiungo lo script su "),ta=t(E,"CODE",{});var b=p(ta);pa=m(b,"package.json"),b.forEach(c),la=m(E,":"),E.forEach(c),ca=l(a),ra=t(a,"PRE",{class:!0}),p(ra).forEach(c),ia=l(a),ua=t(a,"P",{});var y=p(ua);ga=m(y,"E quindi creo il file gh-pages.js:"),y.forEach(c),ka=l(a),da=t(a,"PRE",{class:!0}),p(da).forEach(c),ma=l(a),ha=t(a,"P",{});var Ft=p(ha);fa=m(Ft,"Per pubblicare su GitHub mi serve l’"),va=t(Ft,"A",{href:!0,rel:!0});var Qt=p(va);Ea=m(Qt,"adapter-static"),Qt.forEach(c),ba=m(Ft,":"),Ft.forEach(c),Pa=l(a),wa=t(a,"PRE",{class:!0}),p(wa).forEach(c),ya=l(a),Ca=t(a,"P",{});var Vt=p(Ca);Ha=m(Vt,"Aggiorno quindi il file "),qa=t(Vt,"CODE",{});var Xt=p(qa);Ma=m(Xt,"svelte.config.js"),Xt.forEach(c),Vt.forEach(c),ja=l(a),xa=t(a,"PRE",{class:!0}),p(xa).forEach(c),za=l(a),Da=t(a,"P",{});var Yt=p(Da);La=m(Yt,"Se eseguo il comando"),Yt.forEach(c),Oa=l(a),Ia=t(a,"PRE",{class:!0}),p(Ia).forEach(c),Sa=l(a),Aa=t(a,"P",{});var Zt=p(Aa);Ta=m(Zt,"Otterrò una cartella "),Ra=t(Zt,"CODE",{});var ap=p(Ra);Ga=m(ap,"build"),ap.forEach(c),Ba=m(Zt," nella root del progetto. Bene, questa sarà la cartella da caricare su GitHub Pages. Ma prima devo configurare il repository in maniera corretta."),Zt.forEach(c),Ka=l(a),h(Ua.$$.fragment,a),Ja=l(a),$a=t(a,"P",{});var np=p($a);Na=m(np,"Imposto come origine del sito la branch "),Wa=t(np,"CODE",{});var sp=p(Wa);_a=m(sp,"gh-pages"),sp.forEach(c),Fa=m(np," e, in caso, imposto un dominio personalizzato."),np.forEach(c),Qa=l(a),Va=t(a,"P",{});var ep=p(Va);Xa=m(ep,"Mi servono poi altri 2 file, entrambi da inserire nella cartella "),Ya=t(ep,"CODE",{});var op=p(Ya);Za=m(op,"static"),op.forEach(c),an=m(ep,":"),ep.forEach(c),nn=l(a),sn=t(a,"UL",{});var tp=p(sn);en=t(tp,"LI",{});var pp=p(en);on=t(pp,"CODE",{});var lp=p(on);tn=m(lp,".nojekyll"),lp.forEach(c),pn=m(pp,", per evitare che sia Jekyll a gestire le pagine create (see "),ln=t(pp,"A",{href:!0,rel:!0});var cp=p(ln);cn=m(cp,"Bypassing Jekyll on GitHub Pages"),cp.forEach(c),rn=m(pp,")"),pp.forEach(c),un=l(tp),gn=t(tp,"LI",{});var rp=p(gn);kn=t(rp,"CODE",{});var ip=p(kn);dn=m(ip,"CNAME"),ip.forEach(c),mn=m(rp,", per permette a GitHub Pages di usare il dominio personalizzato che ho impostato."),rp.forEach(c),tp.forEach(c),hn=l(a),fn=t(a,"P",{});var up=p(fn);vn=m(up,"Il primo file, "),En=t(up,"CODE",{});var gp=p(En);bn=m(gp,".nojekyll"),gp.forEach(c),Pn=m(up," è un file vuoto. Basta crearlo e non scriverci dentro nulla."),up.forEach(c),wn=l(a),yn=t(a,"P",{});var kp=p(yn);Cn=t(kp,"CODE",{});var dp=p(Cn);Hn=m(dp,"CNAME"),dp.forEach(c),qn=m(kp,", invece, contiene una sola riga: il nome del dominio, in questo formato:"),kp.forEach(c),Mn=l(a),jn=t(a,"PRE",{class:!0}),p(jn).forEach(c),xn=l(a),zn=t(a,"P",{});var mp=p(zn);Dn=m(mp,"Fatto questo posso ricompilare il sito con "),Ln=t(mp,"CODE",{});var hp=p(Ln);On=m(hp,"npm run build"),hp.forEach(c),In=m(mp," e poi usare"),mp.forEach(c),Sn=l(a),An=t(a,"PRE",{class:!0}),p(An).forEach(c),Tn=l(a),Rn=t(a,"P",{});var fp=p(Rn);Gn=m(fp,"per caricarlo online."),fp.forEach(c),Bn=l(a),Kn=t(a,"P",{});var vp=p(Kn);Un=m(vp,"In fase di sviluppo è comodo anche il comando"),vp.forEach(c),Jn=l(a),$n=t(a,"PRE",{class:!0}),p($n).forEach(c),Nn=l(a),Wn=t(a,"P",{});var Ep=p(Wn);_n=m(Ep,"Per vedere in tempo reale le modifiche fatte al codice."),Ep.forEach(c),Fn=l(a),Qn=t(a,"P",{});var bp=p(Qn);Vn=m(bp,"Provo ad aggiungere una nuova pagina, "),Xn=t(bp,"CODE",{});var Pp=p(Xn);Yn=m(Pp,"about.svelte"),Pp.forEach(c),Zn=m(bp,". Basta creare un nuovo componente nella cartella "),as=t(bp,"CODE",{});var wp=p(as);ns=m(wp,"src\\routes"),wp.forEach(c),ss=m(bp,"."),bp.forEach(c),es=l(a),os=t(a,"P",{});var yp=p(os);ts=m(yp,"Questo può andare bene per un sito statico. E se invece volessi creare qualcosa di simile ad un blog?"),yp.forEach(c),ps=l(a),ls=t(a,"P",{});var Cp=p(ls);cs=m(Cp,"Qui la questione è un po’ più complicata. Ho trovato alcuni post e video in rete:"),Cp.forEach(c),rs=l(a),is=t(a,"UL",{});var Hp=p(is);us=t(Hp,"LI",{});var qp=p(us);gs=t(qp,"A",{href:!0,rel:!0});var Mp=p(gs);ks=m(Mp,"SvelteKit Blog"),Mp.forEach(c),ds=m(qp," - grazie John per il link!"),qp.forEach(c),ms=l(Hp),hs=t(Hp,"LI",{});var jp=p(hs);fs=t(jp,"A",{href:!0,rel:!0});var xp=p(fs);vs=m(xp,"Sveltekit Markdown Blog"),xp.forEach(c),jp.forEach(c),Es=l(Hp),bs=t(Hp,"LI",{});var zp=p(bs);Ps=t(zp,"A",{href:!0,rel:!0});var Dp=p(Ps);ws=m(Dp,"How to Create a Blog with SvelteKit and Strapi"),Dp.forEach(c),zp.forEach(c),ys=l(Hp),Cs=t(Hp,"LI",{});var Lp=p(Cs);Hs=t(Lp,"A",{href:!0,rel:!0});var Op=p(Hs);qs=m(Op,"How to create a blog with SvelteKit and dev.to API"),Op.forEach(c),Lp.forEach(c),Hp.forEach(c),Ms=l(a),js=t(a,"P",{});var Ip=p(js);xs=m(Ip,"E altri ancora. Non sono davvero soddisfatto di nessuna delle soluzioni proposte. Ma non ho ancora una mia proposta. Mi limito per il momento a unire alcuni passaggi dei diversi. Devo però fare un ringraziamento particolare a "),zs=t(Ip,"A",{href:!0,rel:!0});var Sp=p(zs);Ds=m(Sp,"WebJeda"),Sp.forEach(c),Ls=m(Ip," per i suoi video e i suoi post."),Ip.forEach(c),Os=l(a),Is=t(a,"P",{});var Ap=p(Is);Ss=m(Ap,"Detto questo, mi serve qualche altro strumento. Per cominciare mi serve "),As=t(Ap,"A",{href:!0,rel:!0});var Tp=p(As);Ts=m(Tp,"trash-cli"),Tp.forEach(c),Rs=m(Ap," per ripulire la cartella "),Gs=t(Ap,"CODE",{});var Rp=p(Gs);Bs=m(Rp,"build"),Rp.forEach(c),Ks=m(Ap," prima di ogni comando "),Us=t(Ap,"CODE",{});var Gp=p(Us);Js=m(Gp,"npm run build"),Gp.forEach(c),Ap.forEach(c),$s=l(a),Ns=t(a,"PRE",{class:!0}),p(Ns).forEach(c),Ws=l(a),_s=t(a,"P",{});var Bp=p(_s);Fs=m(Bp,"Aggiungo un nuovo script a "),Qs=t(Bp,"CODE",{});var Kp=p(Qs);Vs=m(Kp,"package.json"),Kp.forEach(c),Xs=m(Bp," e aggiorno "),Ys=t(Bp,"CODE",{});var Up=p(Ys);Zs=m(Up,"build"),Up.forEach(c),ae=m(Bp,":"),Bp.forEach(c),ne=l(a),se=t(a,"PRE",{class:!0}),p(se).forEach(c),ee=l(a),oe=t(a,"P",{});var Jp=p(oe);te=m(Jp,"Passo quindi a importare "),pe=t(Jp,"A",{href:!0,rel:!0});var $p=p(pe);le=m($p,"mdsvex"),$p.forEach(c),Jp.forEach(c),ce=l(a),re=t(a,"PRE",{class:!0}),p(re).forEach(c),ie=l(a),ue=t(a,"P",{});var Np=p(ue);ge=m(Np,"e in successione uso "),ke=t(Np,"A",{href:!0,rel:!0});var Wp=p(ke);de=m(Wp,"svelte-add/mdsvex"),Wp.forEach(c),me=m(Np,":"),Np.forEach(c),he=l(a),fe=t(a,"PRE",{class:!0}),p(fe).forEach(c),ve=l(a),Ee=t(a,"P",{});var _p=p(Ee);be=t(_p,"CODE",{});var Fp=p(be);Pe=m(Fp,"mdsvex"),Fp.forEach(c),we=m(_p," mi permette di usare le pagine "),ye=t(_p,"CODE",{});var Qp=p(ye);Ce=m(Qp,"markdown"),Qp.forEach(c),He=m(_p," come se fossero dei componenti svelte. Anche come pagine di un router di SvelteKit. C’è un file di configurazione, "),qe=t(_p,"CODE",{});var Vp=p(qe);Me=m(Vp,"mdsvex.config.js"),Vp.forEach(c),je=m(_p,":"),_p.forEach(c),xe=l(a),ze=t(a,"PRE",{class:!0}),p(ze).forEach(c),De=l(a),Le=t(a,"P",{});var Xp=p(Le);Oe=m(Xp,"Il file "),Ie=t(Xp,"CODE",{});var Yp=p(Ie);Se=m(Yp,"svelte.config.js"),Yp.forEach(c),Ae=m(Xp," viene modificato in modo da gestire il markdown:"),Xp.forEach(c),Te=l(a),Re=t(a,"PRE",{class:!0}),p(Re).forEach(c),Ge=l(a),Be=t(a,"P",{});var Zp=p(Be);Ke=m(Zp,"Come prova posso creare alcuni post di un blog fittizio. Creo la cartella "),Ue=t(Zp,"CODE",{});var al=p(Ue);Je=m(al,"src/routes/blog"),al.forEach(c),$e=m(Zp," e dentro inserisco alcuni file "),Ne=t(Zp,"CODE",{});var nl=p(Ne);We=m(nl,".md"),nl.forEach(c),_e=m(Zp,"."),Zp.forEach(c),Fe=l(a),Qe=t(a,"PRE",{class:!0}),p(Qe).forEach(c),Ve=l(a),Xe=t(a,"P",{});var sl=p(Xe);Ye=m(sl,"Dopo aver rieseguito "),Ze=t(sl,"CODE",{});var el=p(Ze);ao=m(el,"npm run dev"),el.forEach(c),no=m(sl," posso vedere il risultato alla pagina "),so=t(sl,"CODE",{});var ol=p(so);eo=m(ol,"http://localhost:3000/blog/hello-world"),ol.forEach(c),sl.forEach(c),oo=l(a),to=t(a,"P",{});var tl=p(to);po=m(tl,"La cosa bella è che è possibile usare Svelte dentro il file. Posso per esempio impostare il titolo della pagina con:"),tl.forEach(c),lo=l(a),co=t(a,"PRE",{class:!0}),p(co).forEach(c),ro=l(a),io=t(a,"P",{});var pl=p(io);uo=m(pl,"e usare dei componenti definiti altrove:"),pl.forEach(c),go=l(a),ko=t(a,"PRE",{class:!0}),p(ko).forEach(c),mo=l(a),ho=t(a,"P",{});var ll=p(ho);fo=m(ll,"È invece un po’ più complessa la gestione delle immagini. Non so ancora quale sia il metodo migliore. Uno prevede di inserire tutte le immagini nella cartella "),vo=t(ll,"CODE",{});var cl=p(vo);Eo=m(cl,"static"),cl.forEach(c),bo=m(ll," e poi richiamarle da lì:"),ll.forEach(c),Po=l(a),wo=t(a,"PRE",{class:!0}),p(wo).forEach(c),yo=l(a),Co=t(a,"P",{});var rl=p(Co);Ho=m(rl,"In alternativa si possono inserire in una cartella dentro "),qo=t(rl,"CODE",{});var il=p(qo);Mo=m(il,"lib"),il.forEach(c),jo=m(rl," e poi importarle come componenti:"),rl.forEach(c),xo=l(a),zo=t(a,"PRE",{class:!0}),p(zo).forEach(c),Do=l(a),Lo=t(a,"P",{});var ul=p(Lo);Oo=m(ul,"Un altro aspetto da tenere presente quando si crea un blog è la necessità di gestire l’home page in maniera dinamica. Posso ottenere qualcosa di carino creando un componente "),Io=t(ul,"CODE",{});var gl=p(Io);So=m(gl,"src/routes/blog/index.svelte"),gl.forEach(c),Ao=m(ul," e usando la funzione "),To=t(ul,"A",{href:!0,rel:!0});var kl=p(To);Ro=m(kl,"load()"),kl.forEach(c),Go=m(ul,"."),ul.forEach(c),Bo=l(a),Ko=t(a,"P",{});var dl=p(Ko);Uo=m(dl,"Comincio con l’importare nel componente un array con un riferimento a tutti file con estensione "),Jo=t(dl,"CODE",{});var ml=p(Jo);$o=m(ml,"md"),ml.forEach(c),No=m(dl," nella cartella:"),dl.forEach(c),Wo=l(a),_o=t(a,"PRE",{class:!0}),p(_o).forEach(c),Fo=l(a),Qo=t(a,"P",{});var hl=p(Qo);Vo=m(hl,"Estraggo da quell’array le informazioni che mi servono: "),Xo=t(hl,"CODE",{});var fl=p(Xo);Yo=m(fl,"path"),fl.forEach(c),Zo=m(hl,", ovvero la posizione del file, e "),at=t(hl,"CODE",{});var vl=p(at);nt=m(vl,"metadata"),vl.forEach(c),st=m(hl,", che non è altro che il contenuto del Frontmatter del file stesso"),hl.forEach(c),et=l(a),ot=t(a,"PRE",{class:!0}),p(ot).forEach(c),tt=l(a),pt=t(a,"P",{});var El=p(pt);lt=m(El,"Infine passo al componente quello che mi serve per creare l’indice:"),El.forEach(c),ct=l(a),rt=t(a,"PRE",{class:!0}),p(rt).forEach(c),it=l(a),ut=t(a,"P",{});var bl=p(ut);gt=m(bl,"Il resto del componente è abbastanza semplice:"),bl.forEach(c),kt=l(a),dt=t(a,"PRE",{class:!0}),p(dt).forEach(c),mt=l(a),ht=t(a,"P",{});var Pl=p(ht);ft=m(Pl,"Un’altra funzione interessante sono i "),vt=t(Pl,"A",{href:!0,rel:!0});var wl=p(vt);Et=m(wl,"layouts"),wl.forEach(c),bt=m(Pl,", ovvero delle specie di template. Per esempio, posso creare un componente "),Pt=t(Pl,"CODE",{});var yl=p(Pt);wt=m(yl,"src/routes/blog/__layout.svelte"),yl.forEach(c),yt=m(Pl,":"),Pl.forEach(c),Ct=l(a),Ht=t(a,"PRE",{class:!0}),p(Ht).forEach(c),qt=l(a),Mt=t(a,"P",{});var Cl=p(Mt);jt=m(Cl,"Per inserire un menù di navigazione in ogni pagina del blog."),Cl.forEach(c),xt=l(a),zt=t(a,"P",{});var Hl=p(zt);Dt=m(Hl,"Per oggi è tutto. Il codice è disponibile su GitHub:"),Hl.forEach(c),Lt=l(a),Ot=t(a,"UL",{});var ql=p(Ot);It=t(ql,"LI",{});var Ml=p(It);St=t(Ml,"A",{href:!0,rel:!0});var jl=p(St);At=m(jl,"MEMENTO - SvelteKit & GitHub Pages"),jl.forEach(c),Ml.forEach(c),ql.forEach(c),Tt=l(a),Rt=t(a,"P",{});var xl=p(Rt);Gt=m(xl,"Il blog invece è visibile all’indirizzo"),xl.forEach(c),Bt=l(a),Kt=t(a,"P",{});var zl=p(Kt);Ut=m(zl,"Ricordo inoltre l’indirizzo del mio Patreon:"),zl.forEach(c),Jt=l(a),$t=t(a,"UL",{});var Dl=p($t);Nt=t(Dl,"LI",{});var Ll=p(Nt);Wt=t(Ll,"A",{href:!0,rel:!0});var Ol=p(Wt);_t=m(Ol,"Patreon"),Ol.forEach(c),Ll.forEach(c),Dl.forEach(c),this.h()},h(){r(H,"href","https://blog.stranianelli.com/svelte-et-github/"),r(H,"rel","nofollow"),r(R,"href","https://kit.svelte.dev/"),r(R,"rel","nofollow"),r(U,"class","language-bash"),r(_,"class","language-bash"),r(X,"href","https://www.npmjs.com/package/gh-pages"),r(X,"rel","nofollow"),r(na,"class","language-bash"),r(ra,"class","language-json"),r(da,"class","language-js"),r(va,"href","https://www.npmjs.com/package/@sveltejs/adapter-static"),r(va,"rel","nofollow"),r(wa,"class","language-bash"),r(xa,"class","language-js"),r(Ia,"class","language-bash"),r(ln,"href","https://github.blog/2009-12-29-bypassing-jekyll-on-github-pages/"),r(ln,"rel","nofollow"),r(jn,"class","language-bash"),r(An,"class","language-bash"),r($n,"class","language-bash"),r(gs,"href","https://svelteland.github.io/svelte-kit-blog-demo"),r(gs,"rel","nofollow"),r(fs,"href","https://www.youtube.com/playlist?list=PLm_Qt4aKpfKgonq1zwaCS6kOD-nbOKx7V"),r(fs,"rel","nofollow"),r(Ps,"href","https://strapi.io/blog/how-to-create-a-blog-with-svelte-kit-strapi"),r(Ps,"rel","nofollow"),r(Hs,"href","https://dev.to/ladvace/how-to-create-a-blog-with-sveltekit-and-dev-to-api-5h7e"),r(Hs,"rel","nofollow"),r(zs,"href","https://blog.webjeda.com/"),r(zs,"rel","nofollow"),r(As,"href","https://github.com/sindresorhus/trash-cli"),r(As,"rel","nofollow"),r(Ns,"class","language-bash"),r(se,"class","language-json"),r(pe,"href","https://mdsvex.pngwn.io/"),r(pe,"rel","nofollow"),r(re,"class","language-bash"),r(ke,"href","https://github.com/svelte-add/mdsvex"),r(ke,"rel","nofollow"),r(fe,"class","language-bash"),r(ze,"class","language-javascript"),r(Re,"class","language-js"),r(Qe,"class","language-md"),r(co,"class","language-md"),r(ko,"class","language-md"),r(wo,"class","language-html"),r(zo,"class","language-html"),r(To,"href","https://kit.svelte.dev/docs#loading"),r(To,"rel","nofollow"),r(_o,"class","language-html"),r(ot,"class","language-html"),r(rt,"class","language-html"),r(dt,"class","language-html"),r(vt,"href","https://kit.svelte.dev/docs#layouts"),r(vt,"rel","nofollow"),r(Ht,"class","language-html"),r(St,"href","https://github.com/el3um4s/memento-sveltekit-and-github-pages"),r(St,"rel","nofollow"),r(Wt,"href","https://www.patreon.com/el3um4s"),r(Wt,"rel","nofollow")},m(a,e){i(a,n,e),u(n,s),i(a,P,e),i(a,w,e),u(w,C),u(w,H),u(H,M),u(w,j),i(a,x,e),i(a,z,e),u(z,D),u(z,L),u(L,O),u(z,I),i(a,S,e),i(a,A,e),u(A,T),u(A,R),u(R,G),u(A,B),i(a,K,e),i(a,U,e),U.innerHTML='<code class="language-bash"><span class="token function">npm</span> init svelte@next my-app</code>',i(a,J,e),i(a,$,e),u($,N),i(a,W,e),i(a,_,e),_.innerHTML='<code class="language-bash"><span class="token function">npm</span> i</code>',i(a,F,e),i(a,Q,e),u(Q,V),u(Q,X),u(X,Y),u(Q,Z),i(a,aa,e),i(a,na,e),na.innerHTML='<code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> gh-pages --save-dev</code>',i(a,sa,e),i(a,ea,e),u(ea,oa),u(ea,ta),u(ta,pa),u(ea,la),i(a,ca,e),i(a,ra,e),ra.innerHTML='<code class="language-json"><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n <span class="token property">"deploy"</span><span class="token operator">:</span> <span class="token string">"node ./gh-pages.js"</span>\n<span class="token punctuation">&#125;</span></code>',i(a,ia,e),i(a,ua,e),u(ua,ga),i(a,ka,e),i(a,da,e),da.innerHTML='<code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> publish <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">\'gh-pages\'</span><span class="token punctuation">;</span>\n\n<span class="token function">publish</span><span class="token punctuation">(</span>\n <span class="token string">\'build\'</span><span class="token punctuation">,</span> <span class="token comment">// path to public directory</span>\n <span class="token punctuation">&#123;</span>\n  branch<span class="token operator">:</span> <span class="token string">\'gh-pages\'</span><span class="token punctuation">,</span>\n  repo<span class="token operator">:</span> <span class="token string">\'https://github.com/el3um4s/memento-sveltekit-and-github-pages.git\'</span><span class="token punctuation">,</span> <span class="token comment">// Update to point to your repository</span>\n  user<span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n   name<span class="token operator">:</span> <span class="token string">\'Samuele de Tomasi\'</span><span class="token punctuation">,</span> <span class="token comment">// update to use your name</span>\n   email<span class="token operator">:</span> <span class="token string">\'samuele@stranianelli.com\'</span> <span class="token comment">// Update to use your email</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n  dotfiles<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Deploy Complete!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span></code>',i(a,ma,e),i(a,ha,e),u(ha,fa),u(ha,va),u(va,Ea),u(ha,ba),i(a,Pa,e),i(a,wa,e),wa.innerHTML='<code class="language-bash"><span class="token function">npm</span> i -D @sveltejs/adapter-static@next</code>',i(a,ya,e),i(a,Ca,e),u(Ca,Ha),u(Ca,qa),u(qa,Ma),i(a,ja,e),i(a,xa,e),xa.innerHTML='<code class="language-js"><span class="token keyword">import</span> preprocess <span class="token keyword">from</span> <span class="token string">\'svelte-preprocess\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> adapter <span class="token keyword">from</span> <span class="token string">\'@sveltejs/adapter-static\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">/** @type &#123;import(\'@sveltejs/kit\').Config&#125; */</span>\n<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n <span class="token comment">// Consult https://github.com/sveltejs/svelte-preprocess</span>\n <span class="token comment">// for more information about preprocessors</span>\n preprocess<span class="token operator">:</span> <span class="token function">preprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n kit<span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n <span class="token comment">// hydrate the &lt;div id="svelte"> element in src/app.html</span>\n  target<span class="token operator">:</span> <span class="token string">\'#svelte\'</span><span class="token punctuation">,</span>\n  adapter<span class="token operator">:</span> <span class="token function">adapter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>\n  <span class="token comment">// default options are shown</span>\n   pages<span class="token operator">:</span> <span class="token string">\'build\'</span><span class="token punctuation">,</span>\n   assets<span class="token operator">:</span> <span class="token string">\'build\'</span><span class="token punctuation">,</span>\n   fallback<span class="token operator">:</span> <span class="token keyword">null</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>\n <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span></code>',i(a,za,e),i(a,Da,e),u(Da,La),i(a,Oa,e),i(a,Ia,e),Ia.innerHTML='<code class="language-bash"><span class="token function">npm</span> run build</code>',i(a,Sa,e),i(a,Aa,e),u(Aa,Ta),u(Aa,Ra),u(Ra,Ga),u(Aa,Ba),i(a,Ka,e),f(Ua,a,e),i(a,Ja,e),i(a,$a,e),u($a,Na),u($a,Wa),u(Wa,_a),u($a,Fa),i(a,Qa,e),i(a,Va,e),u(Va,Xa),u(Va,Ya),u(Ya,Za),u(Va,an),i(a,nn,e),i(a,sn,e),u(sn,en),u(en,on),u(on,tn),u(en,pn),u(en,ln),u(ln,cn),u(en,rn),u(sn,un),u(sn,gn),u(gn,kn),u(kn,dn),u(gn,mn),i(a,hn,e),i(a,fn,e),u(fn,vn),u(fn,En),u(En,bn),u(fn,Pn),i(a,wn,e),i(a,yn,e),u(yn,Cn),u(Cn,Hn),u(yn,qn),i(a,Mn,e),i(a,jn,e),jn.innerHTML='<code class="language-bash">test.stranianelli.com</code>',i(a,xn,e),i(a,zn,e),u(zn,Dn),u(zn,Ln),u(Ln,On),u(zn,In),i(a,Sn,e),i(a,An,e),An.innerHTML='<code class="language-bash"><span class="token function">npm</span> run deploy</code>',i(a,Tn,e),i(a,Rn,e),u(Rn,Gn),i(a,Bn,e),i(a,Kn,e),u(Kn,Un),i(a,Jn,e),i(a,$n,e),$n.innerHTML='<code class="language-bash"><span class="token function">npm</span> run dev -- --open</code>',i(a,Nn,e),i(a,Wn,e),u(Wn,_n),i(a,Fn,e),i(a,Qn,e),u(Qn,Vn),u(Qn,Xn),u(Xn,Yn),u(Qn,Zn),u(Qn,as),u(as,ns),u(Qn,ss),i(a,es,e),i(a,os,e),u(os,ts),i(a,ps,e),i(a,ls,e),u(ls,cs),i(a,rs,e),i(a,is,e),u(is,us),u(us,gs),u(gs,ks),u(us,ds),u(is,ms),u(is,hs),u(hs,fs),u(fs,vs),u(is,Es),u(is,bs),u(bs,Ps),u(Ps,ws),u(is,ys),u(is,Cs),u(Cs,Hs),u(Hs,qs),i(a,Ms,e),i(a,js,e),u(js,xs),u(js,zs),u(zs,Ds),u(js,Ls),i(a,Os,e),i(a,Is,e),u(Is,Ss),u(Is,As),u(As,Ts),u(Is,Rs),u(Is,Gs),u(Gs,Bs),u(Is,Ks),u(Is,Us),u(Us,Js),i(a,$s,e),i(a,Ns,e),Ns.innerHTML='<code class="language-bash"><span class="token function">npm</span> i -D trash-cli</code>',i(a,Ws,e),i(a,_s,e),u(_s,Fs),u(_s,Qs),u(Qs,Vs),u(_s,Xs),u(_s,Ys),u(Ys,Zs),u(_s,ae),i(a,ne,e),i(a,se,e),se.innerHTML='<code class="language-json"><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"npm run clean &amp;&amp; svelte-kit build"</span><span class="token punctuation">,</span>\n <span class="token property">"clean"</span><span class="token operator">:</span> <span class="token string">"trash build"</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>',i(a,ee,e),i(a,oe,e),u(oe,te),u(oe,pe),u(pe,le),i(a,ce,e),i(a,re,e),re.innerHTML='<code class="language-bash"><span class="token function">npm</span> i -D mdsvex</code>',i(a,ie,e),i(a,ue,e),u(ue,ge),u(ue,ke),u(ke,de),u(ue,me),i(a,he,e),i(a,fe,e),fe.innerHTML='<code class="language-bash">npx svelte-add@latest mdsvex</code>',i(a,ve,e),i(a,Ee,e),u(Ee,be),u(be,Pe),u(Ee,we),u(Ee,ye),u(ye,Ce),u(Ee,He),u(Ee,qe),u(qe,Me),u(Ee,je),i(a,xe,e),i(a,ze,e),ze.innerHTML='<code class="language-javascript"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n  <span class="token string">"extensions"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">".svelte.md"</span><span class="token punctuation">,</span> <span class="token string">".md"</span><span class="token punctuation">,</span> <span class="token string">".svx"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n  <span class="token string">"smartypants"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n    <span class="token string">"dashes"</span><span class="token operator">:</span> <span class="token string">"oldschool"</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n\n  <span class="token string">"remarkPlugins"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token string">"rehypePlugins"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span></code>',i(a,De,e),i(a,Le,e),u(Le,Oe),u(Le,Ie),u(Ie,Se),u(Le,Ae),i(a,Te,e),i(a,Re,e),Re.innerHTML='<code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>\n mdsvex\n<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"mdsvex"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> mdsvexConfig <span class="token keyword">from</span> <span class="token string">"./mdsvex.config.js"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> preprocess <span class="token keyword">from</span> <span class="token string">\'svelte-preprocess\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> adapter <span class="token keyword">from</span> <span class="token string">\'@sveltejs/adapter-static\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">/** @type &#123;import(\'@sveltejs/kit\').Config&#125; */</span>\n<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n <span class="token string">"extensions"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">".svelte"</span><span class="token punctuation">,</span> <span class="token operator">...</span>mdsvexConfig<span class="token punctuation">.</span>extensions<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  preprocess<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">preprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">mdsvex</span><span class="token punctuation">(</span>mdsvexConfig<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n  kit<span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n   target<span class="token operator">:</span> <span class="token string">\'#svelte\'</span><span class="token punctuation">,</span>\n   adapter<span class="token operator">:</span> <span class="token function">adapter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>\n\tpages<span class="token operator">:</span> <span class="token string">\'build\'</span><span class="token punctuation">,</span>\n\tassets<span class="token operator">:</span> <span class="token string">\'build\'</span><span class="token punctuation">,</span>\n\tfallback<span class="token operator">:</span> <span class="token keyword">null</span>\n   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span></code>',i(a,Ge,e),i(a,Be,e),u(Be,Ke),u(Be,Ue),u(Ue,Je),u(Be,$e),u(Be,Ne),u(Ne,We),u(Be,_e),i(a,Fe,e),i(a,Qe,e),Qe.innerHTML='<code class="language-md"><span class="token front-matter-block"><span class="token punctuation">---</span>\n<span class="token font-matter yaml language-yaml">file: hello-world.md\ntitle: Hello World</span>\n<span class="token punctuation">---</span></span>\n\nHi!</code>',i(a,Ve,e),i(a,Xe,e),u(Xe,Ye),u(Xe,Ze),u(Ze,ao),u(Xe,no),u(Xe,so),u(so,eo),i(a,oo,e),i(a,to,e),u(to,po),i(a,lo,e),i(a,co,e),co.innerHTML='<code class="language-md"><span class="token title important"><span class="token punctuation">#</span> &#123;title&#125;</span></code>',i(a,ro,e),i(a,io,e),u(io,uo),i(a,go,e),i(a,ko,e),ko.innerHTML='<code class="language-md"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>\n import Box from "$lib/Box.svelte";\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Box</span> <span class="token punctuation">/></span></span></code>',i(a,mo,e),i(a,ho,e),u(ho,fo),u(ho,vo),u(vo,Eo),u(ho,bo),i(a,Po,e),i(a,wo,e),wo.innerHTML='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>\n <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n</code>',i(a,yo,e),i(a,Co,e),u(Co,Ho),u(Co,qo),u(qo,Mo),u(Co,jo),i(a,xo,e),i(a,zo,e),zo.innerHTML='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>\n import ImageSrc from "$lib/assets/drums.png";\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;ImageSrc&#125;</span> <span class="token punctuation">/></span></span></code>',i(a,Do,e),i(a,Lo,e),u(Lo,Oo),u(Lo,Io),u(Io,So),u(Lo,Ao),u(Lo,To),u(To,Ro),u(Lo,Go),i(a,Bo,e),i(a,Ko,e),u(Ko,Uo),u(Ko,Jo),u(Jo,$o),u(Ko,No),i(a,Wo,e),i(a,_o,e),_o.innerHTML='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n const allPosts = import.meta.glob("./**/*.md");\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>',i(a,Fo,e),i(a,Qo,e),u(Qo,Vo),u(Qo,Xo),u(Xo,Yo),u(Qo,Zo),u(Qo,at),u(at,nt),u(Qo,st),i(a,et,e),i(a,ot,e),ot.innerHTML='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n const allPosts = import.meta.glob("./**/*.md");\n let body = [];\n for (let path in allPosts) &#123;\n  body.push(\n   allPosts[path]().then( (&#123;metadata&#125;) => &#123;\n    return &#123; path, metadata&#125;\n   &#125;)\n  );  \n &#125;\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>',i(a,tt,e),i(a,pt,e),u(pt,lt),i(a,ct,e),i(a,rt,e),rt.innerHTML='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n// ...\n export async function load() &#123;\n  const posts = await Promise.all(body);\n   return &#123;\n    props: &#123;posts&#125;\n   &#125;\n &#125;\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>',i(a,it,e),i(a,ut,e),u(ut,gt),i(a,kt,e),i(a,dt,e),dt.innerHTML='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>\n export let posts;\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n &#123;#each  posts as &#123;path, metadata: &#123;title&#125;&#125; &#125;\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>\n   &lt;a href=&#123;&#96;/blog/$&#123;path.replace(".md","")&#125;&#96;&#125;>&#123;title&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n &#123;/each&#125;\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code>',i(a,mt,e),i(a,ht,e),u(ht,ft),u(ht,vt),u(vt,Et),u(ht,bt),u(ht,Pt),u(Pt,wt),u(ht,yt),i(a,Ct,e),i(a,Ht,e),Ht.innerHTML='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">sveltekit:</span>prefetch</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">sveltekit:</span>prefetch</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../about<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>About<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">sveltekit:</span>prefetch</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span></code>',i(a,qt,e),i(a,Mt,e),u(Mt,jt),i(a,xt,e),i(a,zt,e),u(zt,Dt),i(a,Lt,e),i(a,Ot,e),u(Ot,It),u(It,St),u(St,At),i(a,Tt,e),i(a,Rt,e),u(Rt,Gt),i(a,Bt,e),i(a,Kt,e),u(Kt,Ut),i(a,Jt,e),i(a,$t,e),u($t,Nt),u(Nt,Wt),u(Wt,_t),Ft=!0},p:g,i(a){Ft||(v(Ua.$$.fragment,a),Ft=!0)},o(a){E(Ua.$$.fragment,a),Ft=!1},d(a){a&&c(n),a&&c(P),a&&c(w),a&&c(x),a&&c(z),a&&c(S),a&&c(A),a&&c(K),a&&c(U),a&&c(J),a&&c($),a&&c(W),a&&c(_),a&&c(F),a&&c(Q),a&&c(aa),a&&c(na),a&&c(sa),a&&c(ea),a&&c(ca),a&&c(ra),a&&c(ia),a&&c(ua),a&&c(ka),a&&c(da),a&&c(ma),a&&c(ha),a&&c(Pa),a&&c(wa),a&&c(ya),a&&c(Ca),a&&c(ja),a&&c(xa),a&&c(za),a&&c(Da),a&&c(Oa),a&&c(Ia),a&&c(Sa),a&&c(Aa),a&&c(Ka),b(Ua,a),a&&c(Ja),a&&c($a),a&&c(Qa),a&&c(Va),a&&c(nn),a&&c(sn),a&&c(hn),a&&c(fn),a&&c(wn),a&&c(yn),a&&c(Mn),a&&c(jn),a&&c(xn),a&&c(zn),a&&c(Sn),a&&c(An),a&&c(Tn),a&&c(Rn),a&&c(Bn),a&&c(Kn),a&&c(Jn),a&&c($n),a&&c(Nn),a&&c(Wn),a&&c(Fn),a&&c(Qn),a&&c(es),a&&c(os),a&&c(ps),a&&c(ls),a&&c(rs),a&&c(is),a&&c(Ms),a&&c(js),a&&c(Os),a&&c(Is),a&&c($s),a&&c(Ns),a&&c(Ws),a&&c(_s),a&&c(ne),a&&c(se),a&&c(ee),a&&c(oe),a&&c(ce),a&&c(re),a&&c(ie),a&&c(ue),a&&c(he),a&&c(fe),a&&c(ve),a&&c(Ee),a&&c(xe),a&&c(ze),a&&c(De),a&&c(Le),a&&c(Te),a&&c(Re),a&&c(Ge),a&&c(Be),a&&c(Fe),a&&c(Qe),a&&c(Ve),a&&c(Xe),a&&c(oo),a&&c(to),a&&c(lo),a&&c(co),a&&c(ro),a&&c(io),a&&c(go),a&&c(ko),a&&c(mo),a&&c(ho),a&&c(Po),a&&c(wo),a&&c(yo),a&&c(Co),a&&c(xo),a&&c(zo),a&&c(Do),a&&c(Lo),a&&c(Bo),a&&c(Ko),a&&c(Wo),a&&c(_o),a&&c(Fo),a&&c(Qo),a&&c(et),a&&c(ot),a&&c(tt),a&&c(pt),a&&c(ct),a&&c(rt),a&&c(it),a&&c(ut),a&&c(kt),a&&c(dt),a&&c(mt),a&&c(ht),a&&c(Ct),a&&c(Ht),a&&c(qt),a&&c(Mt),a&&c(xt),a&&c(zt),a&&c(Lt),a&&c(Ot),a&&c(Tt),a&&c(Rt),a&&c(Bt),a&&c(Kt),a&&c(Jt),a&&c($t)}}}const H={title:"SvelteKit & GitHub Pages - Italian",lang:"Italian"},{title:q,lang:M}=H;export default class extends a{constructor(a){super(),n(this,a,null,C,s,{})}}export{H as metadata};
